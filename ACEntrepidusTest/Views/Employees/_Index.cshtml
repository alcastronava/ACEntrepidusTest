@model PagedList.IPagedList<ACEntrepidusTest.Models.Employee>

@using PagedList.Mvc;

@if (Model == null || Model.Count == 0)
{
    <br />
    <br />
    <div class="text-center">
        <b>No se encontraron empleados.</b>
    </div>
}
else
{
    <div class="table-responsive">
        <table id="employeetable" class="table tablesorter">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().DocumentId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().FullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().EMail)
                    </th>
                    <th class="sorter-false"></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DocumentId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EMail)
                        </td>
                        <td>
                            @Html.ActionLink("Detalles", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Eliminar", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-6">
            @Html.PagedListPager(Model,
             page => Url.Action("Index", "Employees",
                 new { search = @ViewBag.search, start = @ViewBag.start, end = @ViewBag.end, page, pageSize = @ViewBag.pageSize }),
                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                        PagedListRenderOptions.ClassicPlusFirstAndLast,
                        new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "employeesindex" }))
        </div>
        <div class="col-sm-12 col-md-6 mt-2">
            <div class="text-sm-left text-md-right">
                Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount - Mostrar
                @Html.DropDownList("pageSize", EnumHelper.GetSelectList(typeof(ACEntrepidusTest.Enums.PageSize)),
                 new
                 {
                     @class = "custom-select custom-select-sm form-control form-control-sm",
                     @style = "width: 70px;",
                     onchange = @"$('#formEmployeeList').submit()"
                 })
            </div>
        </div>
    </div>
}